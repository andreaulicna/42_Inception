services:
  nginx:
    container_name: nginx
    image: nginx
    build:
      context: .
      dockerfile: requirements/nginx/Dockerfile
    depends_on: # specify dependencies
      - wordpress # nginx needs to start after wordpress
    ports:
      - "443:443"
    volumes: # container needs to see the config and keys
      - ./requirements/nginx/conf/:/etc/nginx/http.d/
      - ./requirements/nginx/tools:/etc/nginx/ssl/
      - www-vol:/var/www/html/wordpress
    restart: always # restar type
    networks:
      - inception
  
  mariadb:
    container_name: mariadb
    image: mariadb
    build:
      secrets:
        - db_root_password
        - db_password
      context: .
      dockerfile: requirements/mariadb/Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
    ports:
      - "3306:3306"
    volumes:
      - db-volume:/var/lib/mysql
    restart: always # restar type
    networks:
      - inception

  wordpress:
    container_name: wordpress
    image: wordpress
    build:
      secrets:
        - db_password
      context: requirements/wordpress/
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_HOST: ${DB_HOST}
    volumes:
      - www-vol:/var/www/html/wordpress
    depends_on:
      - mariadb
    networks:
      - inception
    restart: always

  redis:
    container_name: redis
    image: redis
    build:
      context: .
      dockerfile: requirements/bonus/redis/Dockerfile
    depends_on:
      - wordpress
    ports:
      - "6379:6379"
    networks:
      - inception
    restart: always
  
  vsftpd:
    container_name: vsftpd
    image: vsftpd
    build:
      secrets:
        - ftp_password
      context: .
      dockerfile: requirements/bonus/vsftpd/Dockerfile
      args:
        FTP_USER: ${FTP_USER}
    ports:
      - "21:21"
    volumes:
      - www-vol:/var/www
    networks:
      - inception
    restart: always
  
  adminer:
    container_name: adminer
    image: adminer
    build:
      context: requirements/bonus/adminer/
    depends_on:
      - mariadb
    ports:
      - "8081:8081"
    networks:
     - inception
    restart: always

  cadvisor:
    container_name: cadvisor
    image: cadvisor
    build:
      context: requirements/bonus/cadvisor/
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    restart: always

  website:
    container_name: website
    image: website
    build:
      context: .
      dockerfile: requirements/bonus/web/Dockerfile
    ports:
      - "4242:4242"
    networks:
      - inception
    restart: always

# This section unites all the containers into a single (named) network.
# By default, all the containers defined within one docker-compose file are united in one network, but we cannot set the name of such a network. Accessing the network by a name will be useful later on.
networks:
  inception:
    driver: bridge

# This is a common section for NGINX and Wordpress to define how the data exchange between them will look like.
# It also manages the storing of the database - it will be stored in home/aulicna/data.
volumes:
  www-vol:
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/data/www-vol
  db-volume:
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/data/db-volume

secrets:
  db_root_password:
    file: ../secrets/db_root_password.txt
  db_password:
    file: ../secrets/db_password.txt
  ftp_password:
    file: ../secrets/ftp_password.txt
